// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace CSETWebCore.DataLayer.Model;

/// <summary>
/// A collection of SETS records
/// </summary>
public partial class SETS
{
    /// <summary>
    /// The Set Name is used to
    /// </summary>
    [Key]
    [StringLength(50)]
    public string Set_Name { get; set; }

    /// <summary>
    /// The Full Name is used to
    /// </summary>
    [StringLength(250)]
    public string Full_Name { get; set; }

    [Required]
    [StringLength(50)]
    public string Short_Name { get; set; }

    [Required]
    public bool? Is_Displayed { get; set; }

    /// <summary>
    /// The Is Pass Fail is used to
    /// </summary>
    public bool Is_Pass_Fail { get; set; }

    /// <summary>
    /// The Old Std Name is used to
    /// </summary>
    [StringLength(50)]
    public string Old_Std_Name { get; set; }

    public int? Set_Category_Id { get; set; }

    public int? Order_In_Category { get; set; }

    public int? Report_Order_Section_Number { get; set; }

    public int? Aggregation_Standard_Number { get; set; }

    public bool Is_Question { get; set; }

    public bool Is_Requirement { get; set; }

    public int Order_Framework_Standards { get; set; }

    [StringLength(800)]
    public string Standard_ToolTip { get; set; }

    public bool Is_Deprecated { get; set; }

    [StringLength(50)]
    public string Upgrade_Set_Name { get; set; }

    public bool Is_Custom { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? Date { get; set; }

    public bool IsEncryptedModule { get; set; }

    [Required]
    public bool? IsEncryptedModuleOpen { get; set; }

    [InverseProperty("Set_NameNavigation")]
    public virtual ICollection<AVAILABLE_STANDARDS> AVAILABLE_STANDARDS { get; set; } = new List<AVAILABLE_STANDARDS>();

    [InverseProperty("Base_StandardNavigation")]
    public virtual ICollection<CUSTOM_STANDARD_BASE_STANDARD> CUSTOM_STANDARD_BASE_STANDARDBase_StandardNavigation { get; set; } = new List<CUSTOM_STANDARD_BASE_STANDARD>();

    [InverseProperty("Custom_Questionaire_NameNavigation")]
    public virtual ICollection<CUSTOM_STANDARD_BASE_STANDARD> CUSTOM_STANDARD_BASE_STANDARDCustom_Questionaire_NameNavigation { get; set; } = new List<CUSTOM_STANDARD_BASE_STANDARD>();

    [InverseProperty("Set_NameNavigation")]
    public virtual ICollection<MODES_SETS_MATURITY_MODELS> MODES_SETS_MATURITY_MODELS { get; set; } = new List<MODES_SETS_MATURITY_MODELS>();

    [InverseProperty("Original_Set_NameNavigation")]
    public virtual ICollection<NEW_QUESTION> NEW_QUESTION { get; set; } = new List<NEW_QUESTION>();

    [InverseProperty("Set_NameNavigation")]
    public virtual ICollection<NEW_QUESTION_SETS> NEW_QUESTION_SETS { get; set; } = new List<NEW_QUESTION_SETS>();

    [InverseProperty("Original_Set_NameNavigation")]
    public virtual ICollection<NEW_REQUIREMENT> NEW_REQUIREMENT { get; set; } = new List<NEW_REQUIREMENT>();

    [InverseProperty("Report_Set_Entity_NameNavigation")]
    public virtual ICollection<REPORT_STANDARDS_SELECTION> REPORT_STANDARDS_SELECTION { get; set; } = new List<REPORT_STANDARDS_SELECTION>();

    [InverseProperty("Set_NameNavigation")]
    public virtual ICollection<REQUIREMENT_QUESTIONS_SETS> REQUIREMENT_QUESTIONS_SETS { get; set; } = new List<REQUIREMENT_QUESTIONS_SETS>();

    [InverseProperty("Set_NameNavigation")]
    public virtual ICollection<REQUIREMENT_SETS> REQUIREMENT_SETS { get; set; } = new List<REQUIREMENT_SETS>();

    [InverseProperty("Set_NameNavigation")]
    public virtual ICollection<SECTOR_STANDARD_RECOMMENDATIONS> SECTOR_STANDARD_RECOMMENDATIONS { get; set; } = new List<SECTOR_STANDARD_RECOMMENDATIONS>();

    [InverseProperty("SetNameNavigation")]
    public virtual ICollection<SET_FILES> SET_FILES { get; set; } = new List<SET_FILES>();

    [InverseProperty("Set_NameNavigation")]
    public virtual ICollection<STANDARD_CATEGORY_SEQUENCE> STANDARD_CATEGORY_SEQUENCE { get; set; } = new List<STANDARD_CATEGORY_SEQUENCE>();

    [InverseProperty("Set_NameNavigation")]
    public virtual ICollection<STANDARD_SOURCE_FILE> STANDARD_SOURCE_FILE { get; set; } = new List<STANDARD_SOURCE_FILE>();

    [ForeignKey("Set_Category_Id")]
    [InverseProperty("SETS")]
    public virtual SETS_CATEGORY Set_Category { get; set; }

    [InverseProperty("Set_NameNavigation")]
    public virtual ICollection<UNIVERSAL_SUB_CATEGORY_HEADINGS> UNIVERSAL_SUB_CATEGORY_HEADINGS { get; set; } = new List<UNIVERSAL_SUB_CATEGORY_HEADINGS>();
}